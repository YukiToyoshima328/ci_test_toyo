references:
  commands:
    run_echo: &run_echo
      name: Run Echo
      command: |
        mkdir -p ~/hogeeee

run_echo2: &run_echo2
  name: Run Echo 2
  command: |
    case "${CIRCLE_BRANCH}" in 
      master)
        ENVIRONMENT_LABEL=本番
        ;;
      staging)
        ENVIRONMENT_LABEL=ステージ
        ;;
    esac
    echo "export ENVIRONMENT_LABEL='$ENVIRONMENT_LABEL'"

version: 2
jobs:
  two:
    working_directory: /home/circleci/my_test
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run: echo 'hoge2'
      - restore_cache:
          keys:
            - npm-v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
      #- run: sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib/node_modules
      
      #- run: sudo npm install -g npm@6.0.1 
      - run: npm install
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - my_test
      - save_cache:
          key: npm-v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  three:
    #<<: *run_echo
    working_directory: /home/circleci/my_test
    docker:
      - image: circleci/ruby:2.4.1-jessie
    steps:
      - run: *run_echo
      - run: *run_echo2
      #- run: echo "$ENVIRONMENT_LABEL" > env.txt
      #- run: echo "${TOYO_HIPCHAT_ROOM_ID}" > env.txt
      - run: echo "${HIPCHAT_AUTH_TOKEN}" > env.txt
      #- deploy:
      #    name: Make Env txt
      #    command: |
      #      echo "${TOYO_HIPCHAT_ROOM_ID}" > env.txt
      #- deploy:
      #    name: hipchat test
      #    command: |
      #      curl -H "Content-Type: application/json" \
      #           -X POST \
      #           -d "hogehoge" \
      #           "https://api.hipchat.com/v2/room/${TOYO_HIPCHAT_ROOM_ID}/notification?auth_token=${HIPCHAT_AUTH_TOKEN}"
      - attach_workspace:
          at: /home/circleci
      #- run: echo 'hoge3'
      - restore_cache:
          keys:
            - npm-v1-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
workflows:
  version: 2
  one_and_two:
    jobs:
      - two
      - three:
          requires:
            - two
      #- two:
      #    type: approval
      #    requires:
      #      - one
